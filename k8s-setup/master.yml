---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - gpg
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

  - name: Reset containerd configuration
    shell: containerd config default > /etc/containerd/config.toml

  - name: Apply CRI configuration in containerd configuration file
    lineinfile:
      path: /etc/containerd/config.toml
      regexp: 'SystemdCgroup = false'
      line: 'SystemdCgroup = true'
      
  - name: Restart containerd
    shell: systemctl restart containerd

  # - name: Add vagrant user to docker group
  #   user:
  #     name: vagrant
  #     group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    shell: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Download public signing key for K8s
    shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

  - name: Add the K8s apt repo
    shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
    
  - name: Initialize the Kubernetes cluster using kubeadm
    shell: kubeadm init --apiserver-advertise-address={{ node_ip }} --apiserver-cert-extra-sans={{ node_ip }} --node-name {{ node_name }} --pod-network-cidr={{ pod_network }}
    when: master_num == 0

  - name: Setup kubeconfig for vagrant user
    shell: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Install auto completion
    shell: apt-get install -y bash-completion

  - name: Additional kubectl configuration
    become: false
    shell: |
      echo 'source <(kubectl completion bash)' >>~/.bashrc
      echo 'alias k=kubectl' >>~/.bashrc
      echo 'complete -o default -F __start_kubectl k' >>~/.bashrc
      export do='--dry-run -o yaml'
  
  - name: Copy CNI yaml file to master
    copy:
      src: calico.yaml
      dest: /home/vagrant/calico.yaml
      owner: vagrant
      group: vagrant
      mode: 0644
  
  - name: Modify calico.yaml
    lineinfile:
      path: /home/vagrant/calico.yaml
      regexp: '(.*)(value: changemetopoolcidr)'
      line: '\1value: {{ pod_network }}'
      backrefs: True

  - name: Apply the CNI manifest
    shell: kubectl apply -f /home/vagrant/calico.yaml
    become: True
    become_user: vagrant